1. Which of the following are essential questions to answer in planning a strategy for scaling out with shards? Check all that apply.

What tolerance do I have for data loss?
By what factors should I measure the capacity of my system?[T]
How many shards do I need to add to keep my capacity under 80%?[T]
What is the age of my existing infrastructure and should I consider updating to more reliable hardware?
What growth trend does my application follow along my primary capacity metric?[T]

2. Which of the following accurately describe config servers in a sharded cluster? Check all that apply.

You can consider config servers to be identical with regard to the data they contain.[T]
The configure servers form a replica set.[They are not a Replica set, they do not talk to each other]
Requests from mongos processes are distributed across the config servers.[Nothing is used, mongos hosts hit on first configdb hosts for meta data, if this 1st configdb host goes down then they hit on second host, however the other configdbs takes only reads. No writes will happend when one of the configdb hosts are down. No chuck migrations will occur during this time]
Config servers are critical to the health of your sharded cluster.[T]
Config servers provide automatic failover such that if one goes down, meta-data updates can continue.

3. True or false? When upgrading from MongoDB 2.4 to 2.6 there is a strict order in which you must upgrade the mongod, mongos, and config servers. (Note: there is a homework on this subject at the end of this chapter.)

True[T]
False

4. Which of the following are services a mongos performs? Check all that apply.

Coordinates the process of keeping shards balanced[T]
Provides an abstraction layer that frees clients from a need to know how the data is sharded[T]
Maintains all cluster meta data
Merges results from individual shards for queries involving sort()[T]
Maintains indexes for shard keys

5. Which of the following occur when a chunk is split?

A small split token is placed in the data file
The data file is turned into two files, but they are at the same location as they were before
A split alters meta data only, there is no change to the data itself[T]
The data file is split in two and possibly moved
A new chunk is created and new writes go to the new chunk

6. Which of the following is the most likely cause of MongoDB marking a chunk as jumbo?

The balancer is not running
Too many large documents in your collection
Too few shards
A shard key with a cardinality that is too low[T]
Too many documents in the collection
